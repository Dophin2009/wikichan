!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);window.addEventListener("mousemove",r.onMouseMove),$(function(){$("p span").each(function(){var e=$(this),t=e.text();e.replaceWith(t)}),$("p").each(function(){var e=$(this),t=e.text().replace(/([\s])([^\s]+)/g,"$1<span>$2</span>");t=t.replace(/^([^\s]+)/g,"<span>$1</span>"),e.empty().append(t)}),$("h1").each(function(){var e=$(this),t=e.text().replace(/([\s])([^\s]+)/g,"$1<span>$2</span>");t=t.replace(/^([^\s]+)/g,"<span>$1</span>"),e.empty().append(t)})})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(3),o=["lorem ipsum","anime"];function a(e,t,n){for(var r="",i=0;i<=n;i++){if(r=u(e,Math.max(t-n+i,0),Math.min(t+i+1,e.length)),-1!=o.indexOf(r))return r}return""}function u(e,t,n){for(var r="",i=t;i<n;i++)r+=e[i].innerText,r+=" ";return r.trim().toLowerCase()}t.onMouseMove=function(e){var t=new r.MousePoint(e.pageX,e.pageY),n=document.elementFromPoint(t.x,t.y);if("span"===n.tagName.toLowerCase()){for(var o,u=Array.prototype.slice.call(n.parentElement.children),s=u.indexOf(n),c=0;c<=4&&""==(o=a(u,s,c));c++);console.log(o),(new i.WikiApi).fetchArticle(o)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){this._x=e,this._y=t}return Object.defineProperty(e.prototype,"x",{get:function(){return this._x},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._y},enumerable:!0,configurable:!0}),e}();t.MousePoint=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){return function(){}}();t.WikiArticle=r;var i=function(){function e(e,t){this._key=e,this._value=t}return Object.defineProperty(e.prototype,"key",{get:function(){return this._key},set:function(e){this._key=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"value",{get:function(){return this._value},set:function(e){this._value=e},enumerable:!0,configurable:!0}),e}();t.WikiApiQueryParams=i;var o=function(){function e(e){this.endpoint=e,this.params=new Array}return e.prototype.addParam=function(e,t){var n=new i(e,t);return this.params.push(n),this},e.prototype.build=function(){var e=this.endpoint;return this.params.forEach(function(t){e+=t.key+"="+t.value+"&"}),e},e}();t.WikiApiQuery=o;var a=function(){function e(){this.endpoint="https://en.wikipedia.org/w/api.php?",this.xhr=new XMLHttpRequest}return e.prototype.fetchArticle=function(e){var t=new o(this.endpoint);t.addParam("action","query").addParam("prop","extracts&exintro&explaintext").addParam("origin","*").addParam("titles",e).addParam("format","json"),this.xhr.open("GET",t.build()),this.xhr.setRequestHeader("Content-Type","application/json; charset=UTF-8"),this.xhr.onreadystatechange=function(){},this.xhr.send()},e}();t.WikiApi=a}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,